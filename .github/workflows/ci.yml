name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      name: CI

      on:
        push:
          branches: [ main ]
        pull_request:
          branches: [ main ]

      jobs:
        unit:
          name: Unit tests
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            - name: Cache pip
              uses: actions/cache@v4
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
                restore-keys: |
                  ${{ runner.os }}-pip-
            - name: Install dependencies
              run: |
                python -m venv .venv
                ./.venv/bin/python -m pip install -e '.[dev]'
            - name: Run unit tests (skip local-only Playwright tests)
              run: |
                set -o pipefail
                # Skip tests marked with @pytest.mark.local so Playwright/browser tests are never executed in CI
                ./.venv/bin/python -m pytest -q -m "not local" 2>&1 | tee pytest-output.txt
                RC=${PIPESTATUS[0]}
                exit $RC
            - name: List local-only tests (for visibility)
              run: |
                # Use a small helper script to collect tests; avoids embedding scripts in YAML
                ./.venv/bin/python ci/list_local_tests.py
            - name: Sanitize pytest output
              name: CI

              on:
                push:
                  branches: [ main ]
                pull_request:
                  branches: [ main ]

              jobs:
                unit:
                  name: Unit tests
                  runs-on: ubuntu-latest
                  steps:
                    - uses: actions/checkout@v4
                    - name: Set up Python
                      uses: actions/setup-python@v4
                      with:
                        python-version: '3.11'
                    - name: Cache pip
                      uses: actions/cache@v4
                      with:
                        path: ~/.cache/pip
                        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
                        restore-keys: |
                          ${{ runner.os }}-pip-
                    - name: Install dependencies
                      run: |
                        python -m venv .venv
                        ./.venv/bin/python -m pip install -e '.[dev]'
                    - name: Run unit tests (skip local-only Playwright tests)
                      run: |
                        set -o pipefail
                        # Skip tests marked with @pytest.mark.local so Playwright/browser tests are never executed in CI
                        ./.venv/bin/python -m pytest -q -m "not local" 2>&1 | tee pytest-output.txt
                        RC=${PIPESTATUS[0]}
                        exit $RC
                    - name: List local-only tests (for visibility)
                      run: |
                        # Use a small helper script to collect tests; avoids embedding scripts in YAML
                        ./.venv/bin/python ci/list_local_tests.py
                    - name: Sanitize pytest output
                      if: failure()
                      run: |
                        python ci/sanitize_logs.py pytest-output.txt pytest-output-sanitized.txt
                    - name: Upload sanitized pytest output artifact
                      if: failure()
                      uses: actions/upload-artifact@v4
                      with:
                        name: pytest-output-sanitized-${{ github.run_id }}-${{ github.job }}
                        path: pytest-output-sanitized.txt
                    - name: Post short sanitized pytest snippet as commit comment
                      if: failure()
                      env:
                        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                      run: |
                        SNIPPET=$(head -c 4000 pytest-output-sanitized.txt | sed 's/"/\\"/g' | sed "s/'/\\'/g")
                        payload=$(jq -n --arg body "$SNIPPET" '{body: $body}')
                        curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/json" -d "$payload" "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/comments" || true

                # Note: Playwright/browser tests are intentionally excluded from CI. If
                # maintainers need to run browser tests in CI for debugging they should use
                # the dedicated manual workflow (Refresh Playwright Browsers) to prepare
                # caches and then run tests manually; however, by project policy these tests
                # are local-only and must not execute automatically on CI runs.
